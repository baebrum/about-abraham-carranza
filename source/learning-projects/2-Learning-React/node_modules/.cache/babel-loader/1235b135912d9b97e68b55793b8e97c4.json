{"ast":null,"code":"var _jsxFileName = \"/Users/carranza/Documents/web-based-projects/react-learning/01-starting-setup/src/components/FilterExpense/FilterExpense.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import { useState } from \"react\";\nconst FilterExpense = props => {\n  const check = () => {\n    let ra = [];\n\n    for (let i = 0; i < props.expense_array.length; i++) {\n      // console.log(props.expense_array[i].date);\n      ra.push(props.expense_array[i].date.toLocaleString('en-US', {\n        year: 'numeric'\n      }));\n    }\n\n    let years = [...new Set(ra)];\n  };\n\n  let ra = [];\n\n  for (let i = 0; i < props.expense_array.length; i++) {\n    // console.log(props.expense_array[i].date);\n    ra.push(props.expense_array[i].date.toLocaleString('en-US', {\n      year: 'numeric'\n    }));\n  }\n\n  let years = [...new Set(ra)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: check,\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), years.map(available_year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: available_year,\n        children: available_year\n      }, available_year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 48\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_c = FilterExpense;\nexport default FilterExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterExpense\");","map":{"version":3,"sources":["/Users/carranza/Documents/web-based-projects/react-learning/01-starting-setup/src/components/FilterExpense/FilterExpense.js"],"names":["FilterExpense","props","check","ra","i","expense_array","length","push","date","toLocaleString","year","years","Set","map","available_year"],"mappings":";;;AAAA;AAEA,MAAMA,aAAa,GAAIC,KAAD,IAAW;AAChC,QAAMC,KAAK,GAAG,MAAM;AACnB,QAAIC,EAAE,GAAG,EAAT;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,aAAN,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAqD;AACpD;AACAD,MAAAA,EAAE,CAACI,IAAH,CACCN,KAAK,CAACI,aAAN,CAAoBD,CAApB,EAAuBI,IAAvB,CAA4BC,cAA5B,CAA2C,OAA3C,EAAoD;AACnDC,QAAAA,IAAI,EAAE;AAD6C,OAApD,CADD;AAKA;;AACD,QAAIC,KAAK,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQT,EAAR,CAAJ,CAAZ;AACA,GAXD;;AAYG,MAAIA,EAAE,GAAG,EAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,aAAN,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAqD;AACjD;AACAD,IAAAA,EAAE,CAACI,IAAH,CACIN,KAAK,CAACI,aAAN,CAAoBD,CAApB,EAAuBI,IAAvB,CAA4BC,cAA5B,CAA2C,OAA3C,EAAoD;AAChDC,MAAAA,IAAI,EAAE;AAD0C,KAApD,CADJ;AAKH;;AACD,MAAIC,KAAK,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQT,EAAR,CAAJ,CAAZ;AAEH,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACa;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,EAEcS,KAAK,CAACE,GAAN,CAAWC,cAAD,iBAAoB;AAA8B,QAAA,KAAK,EAAEA,cAArC;AAAA,kBAAsDA;AAAtD,SAAcA,cAAd;AAAA;AAAA;AAAA;AAAA,cAA9B,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAjCD;;KAAMd,a;AAmCN,eAAeA,aAAf","sourcesContent":["// import { useState } from \"react\";\n\nconst FilterExpense = (props) => {\n\tconst check = () => {\n\t\tlet ra = [];\n\t\tfor (let i = 0; i < props.expense_array.length; i++) {\n\t\t\t// console.log(props.expense_array[i].date);\n\t\t\tra.push(\n\t\t\t\tprops.expense_array[i].date.toLocaleString('en-US', {\n\t\t\t\t\tyear: 'numeric',\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tlet years = [...new Set(ra)];\n\t};\n    let ra = [];\n    for (let i = 0; i < props.expense_array.length; i++) {\n        // console.log(props.expense_array[i].date);\n        ra.push(\n            props.expense_array[i].date.toLocaleString('en-US', {\n                year: 'numeric',\n            })\n        );\n    }\n    let years = [...new Set(ra)];\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={check}>hello</button>\n\t\t\t<select>\n                <option value=\"\">Select a Year</option>\n                {years.map((available_year) => <option  key={available_year} value={available_year}>{available_year}</option>)}\n            </select>\n\t\t</div>\n\t);\n};\n\nexport default FilterExpense;\n"]},"metadata":{},"sourceType":"module"}